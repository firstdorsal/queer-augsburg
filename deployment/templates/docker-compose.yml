{{- $config :=  yamlFile "../config.yml" -}}

{{- $interosseaServerHostname := joindomain $config.interossea.server.publicHostname.subdomain (ternary "localhost" $config.interossea.server.publicHostname.domain (eq $config.routing "local")) -}}

{{- $interosseaWebHostname := joindomain $config.interossea.web.publicHostname.subdomain (ternary "localhost" $config.interossea.web.publicHostname.domain (eq $config.routing "local")) -}}

{{- $qaWebHostname := joindomain $config.qa.web.publicHostname.subdomain (ternary "localhost" $config.qa.web.publicHostname.domain (eq $config.routing "local")) -}}

{{- $qaServerHostname := joindomain $config.qa.server.publicHostname.subdomain (ternary "localhost" $config.qa.server.publicHostname.domain (eq $config.routing "local")) -}}

version: "3.9"

services:
    qa-web:
        {{- if eq $config.qa.web.build.enabled true }}
        build:
            context: {{ $config.qa.web.build.path }}
            dockerfile: {{ $config.qa.web.build.dockerfile }}
        {{- else }}
        image: firstdorsal/queer-augsburg-web
        {{- end }}        
        container_name: qa-web
        restart: always
        networks:
            - {{ $config.reverseProxy.network }}
        volumes:
            - ./config/qa-web.yml:/config.yml:ro
            - ./config/qa-web-ui.json:/public/config.json:ro
        environment:
            CSP_CONNECT_SRC: {{ ternary "https://" "http://" $config.tls true }}{{ $interosseaServerHostname}} {{ ternary "https://" "http://" $config.tls true }}{{ $qaServerHostname}}
        labels:
            traefik:
                docker:
                    network: {{ $config.reverseProxy.network }}
                enable: true
                http:
                    routers:
                        qa-web:
                            rule: "Host(`{{ $qaWebHostname }}`)"
                            entrypoints: {{ ternary "websecure" "web" $config.tls }}
                            service: qa-web
                            {{- if eq $config.tls true }}
                            tls:
                                certresolver: "default"
                                domains:
                                    - main: "{{ $config.qa.web.publicHostname.domain }}"
                                      sans: "*.{{ $config.qa.web.publicHostname.domain }}"
                            {{- end }}
                            

                    services:
                        qa-web:
                            loadbalancer:
                                server:
                                    port: 80
    qa-server:
        {{- if eq $config.qa.server.build.enabled true }}
        build:
            context: {{ $config.qa.server.build.path }}
            dockerfile: {{ $config.qa.server.build.dockerfile }}
        {{- else }}
        image: firstdorsal/queer-augsburg-server
        {{- end }}
        
        container_name: qa-server
        networks:
            - qa-db
            - qa-interossea-server
            - {{ $config.reverseProxy.network }}
        restart: always
        environment:
            MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD_QA
            INTEROSSEA_INTERNAL_URL: {{ $config.interossea.server.internalHostname }}
            MAIL_PASSWORD: $INTEROSSEA_MAIL_PASSWORD
        volumes:
            - ./config/qa-server.yml:/config.yml:ro
        labels:
            traefik:
                docker:
                    network: {{ $config.reverseProxy.network }}
                enable: true
                http:
                    routers:
                        qa-server:
                            rule: "Host(`{{ $qaServerHostname }}`)"
                            entrypoints: {{ ternary "websecure" "web" $config.tls }}
                            service: qa-server
                            {{- if eq $config.tls true }}
                            tls:
                                certresolver: "default"
                                domains:
                                    - main: "{{ $config.qa.server.publicHostname.domain }}"
                                      sans: "*.{{ $config.qa.server.publicHostname.domain  }}"
                            {{- end }}
                    services:
                        qa-server:
                            loadbalancer:
                                server:
                                    port: 80
    qa-db:
        image: bitnami/mongodb
        restart: always
        container_name: qa-db
        hostname: qa-db.localhost
        volumes:
            - qa-db:/bitnami:rw
        networks:
            - qa-db
        {{- if eq $config.qa.db.exposeToLocalhost true}}
        ports:
            - 127.0.0.1:{{ $config.qa.db.port }}:{{ $config.qa.db.port }}
        {{- end }}
        environment:
            MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD_QA
            MONGODB_ROOT_USER: root
            MONGODB_ADVERTISED_HOSTNAME: qa-db.localhost
            MONGODB_ADVERTISED_PORT_NUMBER: {{ $config.qa.db.port }}

            MONGODB_REPLICA_SET_MODE: primary
            MONGODB_REPLICA_SET_KEY: "abcdefg"
            MONGODB_REPLICA_SET_NAME: replicaset

            MONGODB_PORT_NUMBER: {{ $config.qa.db.port }}
    {{- if eq $config.interossea.web.create true }}
    qa-interossea-web:
        {{- if eq $config.interossea.web.build.enabled true }}
        build:
            context: {{ $config.interossea.web.build.path }}
            dockerfile: {{ $config.interossea.web.build.dockerfile }}
        {{- else }}
        image: firstdorsal/interossea-web
        {{- end }}
        
        container_name: qa-interossea-web
        volumes:
            - ./config/interossea-web.yml:/config.yml:ro
            - ./config/interossea-web-ui.json:/public/config.json:ro
            - ./data/qrlogo100.png:/public/favicon.png:ro
        restart: always
        environment:
            CSP_CONNECT_SRC: {{ ternary "https://" "http://" $config.tls true }}{{ $interosseaServerHostname}} 
        networks:
            - {{ $config.reverseProxy.network }}
        labels:
            traefik:
                docker:
                    network: {{ $config.reverseProxy.network }}
                enable: true
                http:
                    routers:
                        qa-interossea-web:
                            rule: "Host(`{{ $interosseaWebHostname }}`)"
                            entrypoints: {{ ternary "websecure" "web" $config.tls }}
                            service: qa-interossea-web
                            {{- if eq $config.tls true }}
                            tls:
                                certresolver: "default"
                                domains:
                                    - main: "{{ $config.interossea.web.publicHostname.domain }}"
                                      sans: "*.{{ $config.interossea.web.publicHostname.domain }}"
                            {{- end }}
                    services:
                        qa-interossea-web:
                            loadbalancer:
                                server:
                                    port: 80
    {{- end }}
    {{- if eq $config.interossea.server.create true }}
    qa-interossea-db:
        image: bitnami/mongodb
        restart: always
        container_name: qa-interossea-db
        hostname: qa-interossea-db.localhost
        volumes:
            - qa-interossea-db:/bitnami:rw
        {{- if eq $config.interossea.server.db.exposeToLocalhost true}}
        ports:
            - 127.0.0.1:{{ $config.interossea.server.db.port }}:{{ $config.interossea.server.db.port }}
        {{- end }}
        environment:
            MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD_INTEROSSEA
            MONGODB_ROOT_USER: root
            MONGODB_ADVERTISED_HOSTNAME: qa-interossea-db.localhost
            MONGODB_ADVERTISED_PORT_NUMBER: {{ $config.interossea.server.db.port }}

            MONGODB_REPLICA_SET_MODE: primary
            MONGODB_REPLICA_SET_KEY: "abcdefg"
            MONGODB_REPLICA_SET_NAME: replicaset

            MONGODB_PORT_NUMBER: {{ $config.interossea.server.db.port }}
        networks:
            - qa-interossea-db
    qa-interossea-server:
        {{- if eq $config.interossea.server.build.enabled true }}
        build:
            context: {{ $config.interossea.server.build.path }}
            dockerfile: {{ $config.interossea.server.build.dockerfile }}
        {{- else }}
        image: firstdorsal/interossea-server
        {{- end }}
        container_name: qa-interossea-server
        restart: always
        networks:
            - {{ $config.reverseProxy.network }}
            - qa-interossea-db
            - qa-interossea-server
        volumes:
            - ./config/interossea-server.yml:/config.yml:ro
            - qa-interossea-keys:/keys/:rw
            - ./config/interossea-redirects.env:/redirects/qa.env:ro
            - ./email-templates/:/email-templates/:ro

        environment:
            MONGODB_ROOT_PASSWORD: $MONGODB_ROOT_PASSWORD_INTEROSSEA
            INTEROSSEA_MAIL_PASSWORD: $INTEROSSEA_MAIL_PASSWORD
        labels:
            traefik:
                docker:
                    network: {{ $config.reverseProxy.network }}
                enable: true
                http:
                    routers:
                        qa-interossea-server:
                            rule: "Host(`{{ $interosseaServerHostname }}`)"
                            entrypoints: {{ ternary "websecure" "web" $config.tls }}
                            service: qa-interossea-server
                            {{- if eq $config.tls true }}
                            tls:
                                certresolver: "default"
                                domains:
                                    - main: "{{ $config.interossea.server.publicHostname.domain }}"
                                      sans: "*.{{ $config.interossea.server.publicHostname.domain }}"
                            {{- end }}
                    services:
                        qa-interossea-server:
                            loadbalancer:
                                server:
                                    port: 80
    {{- end }}
    qa-backup:
        container_name: qa-backup
        build:
            context: ../../backup
            dockerfile: Dockerfile
        restart: always
        volumes:
            - qa-db:/backup/db/:ro
            - qa-interossea-db:/backup/db-interossea/:ro
            - ./data/backup/app_data:/app_data/:rw
        environment:
            AWS_ACCESS_KEY_ID: ${BACKUP_AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${BACKUP_AWS_SECRET_ACCESS_KEY}
            AWS_DEFAULT_REGION: eu-central-1
            AWS_S3_BUCKET_NAME: ${BACKUP_AWS_S3_BUCKET_NAME}
            ENCRYPTION_PASSWORD: ${BACKUP_ENCRYPTION_PASSWORD}

    {{- if eq $config.reverseProxy.create true }}
    rp:
        container_name: rp
        image: pektin/verkehr
        restart: always
        networks:
            - {{ $config.reverseProxy.network }}
        volumes:
            - ./config/verkehr.yml:/config.yml:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
        ports:
            - "80:80"
            {{- if eq $config.tls true }}
            - "443:443"
            {{- end }}
        labels:
            traefik:
                http:
                    entrypoints:
                        web:
                            address: ":80"
                        {{- if eq $config.tls true }}
                        websecure:
                            address: ":443"
                        {{- end }}
        
    {{- end }}
volumes:
    qa-db:
        name: qa-db
    qa-interossea-db:
        name: qa-interossea-db
    {{- if eq $config.interossea.server.create true }}
    qa-interossea-keys:
        name: qa-interossea-keys
    {{- end }}
networks:
    qa-interossea-db:
        name: qa-interossea-db
    qa-db:
        name: qa-db
    {{ $config.reverseProxy.network }}:
        name: {{ $config.reverseProxy.network }}
    qa-interossea-server:
        name: qa-interossea-server